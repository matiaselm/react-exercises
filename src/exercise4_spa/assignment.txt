Nippu E. (25p) Palauta tähän lopulliset backend ja  frontend-koodit (EI noden moduuleja eikä tietokantatiedostoja)!

26. Tee tunnus Atlas-palveluun MongoDB-käyttäjäksi. Seuraavat tehtävät tehdään siellä pyörivää kantaa vasten. 
    - Asenna tarvittavat moduulit, mongoose, body-parser, nodemon ym. 
    - Tee Node-sovellus, joka toteuttaa aiemmissa tehtävissä kuvatun clientin backendin REST-APIna. 
    - Toteuta GET, POST, PATCH ja DELETE-metodit henkilötiedoille (puhelinluetteloa varten). 
    - Rakenteista koodi käyttämällä erillisiä route- ja kontrollerikomponentteja.

27. Tee vastaavat REST-backendtoiminnot laskutiedoille. 
    - Lisää kaikkiin tarvittaviin backendin toimintoihin toiminta asynkronisesti. 
    - Käsittele virhetilanteet ja lähetä clientille tilanteeseen sopiva viesti. 
    - Käytä Restin mukaisia endpointteja resurssin mukaan. 
    - Käytä mongoosen schemamäärittelyjä, joilla määrittelet henkilöt ja laskut-resurssit ja niille kantaan collectionit.

28. Muuta tekemäsi React-sovellus käyttämään tässä luotua backendiä. Huomioi CORS.

29. Toteuta käyttäjän kirjautuminen tietokantaa vasten ja luo tarvittavat tokenit. 
    - Varmista että backendiä käyttävä frontend omaa riittävät valtuudet tokeneihin pohjautuvan varmennuksen avulla. 
    - Vain kantaa vasten tunnistautunut käyttäjä, joka jokaisen palvelupyynnön yhteydessä 
        palvelimen antamalla tokenilla tunnistetaan adminiksi, saa käyttää adminille tarkoitettuja palveluita.

30. Viimeistele sovelluksesi nätiksi käyttämällä tyylejä suoraan tai React bootstrapin avulla. Korjaa bugit.

Bonus-tehtävä (tällä voi korvata 10 pisteen edestä puutteita kurssin muista tehtävistä): 
    - Tee henkilöiden ja laskujen välille kannassa 1-m-suhde objectid:tä hyödyntäen (henkilöä kohti voi olla monta laskua). 
    - Voit tallettaa kunkin henkilön yhteydessä hänen laskunsa henkilö-collectioniin ja kunkin laskun yhteyteen siihen laskuun liittyvän henkilön tiedot. 
    - Tee REST-palvelu, jolla henkilön ja hänen laskunsa saa haettua yhdellä haulla. 
    - Nimeä resurssi ja endpointi sopivaksi.